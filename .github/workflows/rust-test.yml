---
name: Rust

"on":
  workflow_call:

env:
  CARGO_INCREMENTAL: 0
  CARGO_PROFILE_TEST_DEBUG: 0

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest

    container:
      image: xd009642/tarpaulin:develop-nightly
      options: --security-opt seccomp=unconfined

    outputs:
      collect_coverage: ${{ steps.coverage.outputs.enable }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache build artifacts
        uses: swatinem/rust-cache@v2.2.0

      - name: Determine whether to measure test coverage
        id: coverage
        run: |
          if [[ "${{ secrets.CODECOV_TOKEN }}" != "" ]]; then
            echo "Enable collection of test coverage"
            echo "::set-output name=enable::true"
          else
            echo "Run tests without coverage"
            echo "::set-output name=enable::false"
          fi

      - name: Run tests
        if: ${{ steps.coverage.outputs.enable != 'true' }}
        run: cargo test --verbose

      - name: Run tests with test coverage
        if: ${{ steps.coverage.outputs.enable == 'true' }}
        run: |
          cargo +nightly tarpaulin --verbose --all-features --workspace --timeout 120 --out Xml

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        if: ${{ steps.coverage.outputs.enable == 'true' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        if: ${{ steps.coverage.outputs.enable == 'true' }}
        with:
          name: code-coverage-report
          path: cobertura.xml
